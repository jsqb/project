import java.io.*;
import java.util.*;

public class TrigramSearch {

	private static final int OFFSET = 3;
	private static String[] words = new String[]{"java", "computer", "programming", "language", "class", "object", "javascript", "javjavscript", "age"};
	private static Map<String, List<Integer>> indexMap; // <trigram, indexNums>

	public static void main(String[] args) {        
		makeTrigramIndex();

		exclusiveSearch("jav", 1);
		exclusiveSearch("age", 1);
		exclusiveSearch("invalid", 1);
	}

	private static void makeTrigramIndex() {
		indexMap = new HashMap<String, List<Integer>>();
		for (int index=0; index < words.length; index++) {
			String word = words[index];
			int len = word.length();
			for (int i=0; i <= len-OFFSET; i++) {
				String trigram = word.substring(i, i+OFFSET);
				List<Integer> indexNums = indexMap.get(trigram);
				if (indexNums == null) {
					indexNums = new ArrayList<Integer>();
					indexMap.put(trigram, indexNums);
				}
				indexNums.add(index);
			}
		}
	}

	private static void exclusiveSearch(String searchWord, int minimumMatches) {
		System.out.println("Your search word: " + searchWord);

		Map<String, Integer> resultWords = new HashMap<String, Integer>(); // <hit-word, hit-count>

		String triKey;
		for (int i=0; i <= searchWord.length()-OFFSET; i++) {
			triKey = searchWord.substring(i, i+OFFSET);
			if (indexMap.containsKey(triKey)) {
				List<Integer> hits = indexMap.get(triKey); // indexNums
				for (Integer j : hits) {
					if (resultWords.containsKey(words[j])) {
						resultWords.put(words[j], resultWords.get(words[j]).intValue()+1);
					} else {
						resultWords.put(words[j], 1);
					}
				}
			}
		}

System.out.println("resultWords="+resultWords);

		if (resultWords.isEmpty()) {
			System.out.println("Not Found!");
			return;
		}

		for (Map.Entry<String, Integer> entry : resultWords.entrySet()) {
			int stringFreq = entry.getValue();
			if (stringFreq >= minimumMatches) {
				System.out.println(entry.getKey() + " (" + stringFreq + " matches)");
			}
		}

	}

}